import { Injectable } from '@angular/core';
import { WordTypes } from '../../word-types.enum';
import { IWord } from '../../iword';

/*
  Generated class for the WordProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
@Injectable()
export class WordProvider {
  words = new Map<WordTypes, string[]>([
    [WordTypes.Noun,
    [
      'time',
      'year',
      'people',
      'way',
      'day',
      'man',
      'thing',
      'woman',
      'life',
      'child',
      'world',
      'school',
      'state',
      'family',
      'student',
      'group',
      'country',
      'problem',
      'hand',
      'part',
      'place',
      'case',
      'week',
      'company',
      'system',
      'program',
      'question',
      'work',
      'government',
      'number',
      'night',
      'point',
      'home',
      'water',
      'room',
      'mother',
      'area',
      'money',
      'story',
      'fact',
      'month',
      'lot',
      'right',
      'study',
      'book',
      'eye',
      'job',
      'word',
      'business',
      'issue',
      'side',
      'kind',
      'head',
      'house',
      'service',
      'friend',
      'father',
      'power',
      'hour',
      'game',
      'line',
      'end',
      'member',
      'law',
      'car',
      'city',
      'community',
      'name',
      'president',
      'team',
      'minute',
      'idea',
      'kid',
      'body',
      'information',
      'back',
      'parent',
      'face',
      'others',
      'level',
      'office',
      'door',
      'health',
      'person',
      'art',
      'war',
      'history',
      'party',
      'result',
      'change',
      'morning',
      'reason',
      'research',
      'girl',
      'guy',
      'moment',
      'air',
      'teacher',
      'force',
      'education'
    ]],
    [WordTypes.Verb,
    [
      'be',
      'have',
      'do',
      'say',
      'go',
      'can',
      'get',
      'would',
      'make',
      'know',
      'will',
      'think',
      'take',
      'see',
      'come',
      'could',
      'want',
      'look',
      'use',
      'find',
      'give',
      'tell',
      'work',
      'may',
      'should',
      'call',
      'try',
      'ask',
      'need',
      'feel',
      'become',
      'leave',
      'put',
      'mean',
      'keep',
      'let',
      'begin',
      'seem',
      'help',
      'talk',
      'turn',
      'start',
      'might',
      'show',
      'hear',
      'play',
      'run',
      'move',
      'like',
      'live',
      'believe',
      'hold',
      'bring',
      'happen',
      'must',
      'write',
      'provide',
      'sit',
      'stand',
      'lose',
      'pay',
      'meet',
      'include',
      'continue',
      'set',
      'learn',
      'change',
      'lead',
      'understand',
      'watch',
      'follow',
      'stop',
      'create',
      'speak',
      'read',
      'allow',
      'add',
      'spend',
      'grow',
      'open',
      'walk',
      'win',
      'offer',
      'remember',
      'love',
      'consider',
      'appear',
      'buy',
      'wait',
      'serve',
      'die',
      'send',
      'expect',
      'build',
      'stay',
      'fall',
      'cut',
      'reach',
      'kill',
      'remain'
    ]],
    [WordTypes.Adjective,
    [
      'other',
      'new',
      'good',
      'high',
      'old',
      'great',
      'big',
      'American',
      'small',
      'large',
      'national',
      'young',
      'different',
      'black',
      'long',
      'little',
      'important',
      'political',
      'bad',
      'white',
      'real',
      'best',
      'right',
      'social',
      'only',
      'public',
      'sure',
      'low',
      'early',
      'able',
      'human',
      'local',
      'late',
      'hard',
      'major',
      'better',
      'economic',
      'strong',
      'possible',
      'whole',
      'free',
      'military',
      'true',
      'federal',
      'international',
      'full',
      'special',
      'easy',
      'clear',
      'recent',
      'certain',
      'personal',
      'open',
      'red',
      'difficult',
      'available',
      'likely',
      'short',
      'single',
      'medical',
      'current',
      'wrong',
      'private',
      'past',
      'foreign',
      'fine',
      'common',
      'poor',
      'natural',
      'significant',
      'similar',
      'hot',
      'dead',
      'central',
      'happy',
      'serious',
      'ready',
      'simple',
      'left',
      'physical',
      'general',
      'environmental',
      'financial',
      'blue',
      'democratic',
      'dark',
      'various',
      'entire',
      'close',
      'legal',
      'religious',
      'cold',
      'final',
      'main',
      'green',
      'nice',
      'huge',
      'popular',
      'traditional',
      'cultural'
    ]],
    [WordTypes.Adverb,
    [
      'up',
      'so',
      'out',
      'just',
      'now',
      'how',
      'then',
      'more',
      'also',
      'here',
      'well',
      'only',
      'very',
      'even',
      'back',
      'there',
      'down',
      'still',
      'in',
      'as',
      'to',
      'when',
      'never',
      'really',
      'most',
      'on',
      'why',
      'about',
      'over',
      'again',
      'where',
      'right',
      'off',
      'always',
      'today',
      'all',
      'far',
      'long',
      'away',
      'yet',
      'often',
      'ever',
      'however',
      'almost',
      'later',
      'much',
      'once',
      'least',
      'ago',
      'together',
      'around',
      'already',
      'enough',
      'both',
      'maybe',
      'actually',
      'probably',
      'home',
      'of course',
      'perhaps',
      'little',
      'else',
      'sometimes',
      'finally',
      'less',
      'better',
      'early',
      'especially',
      'either',
      'quite',
      'simply',
      'nearly',
      'soon',
      'certainly',
      'quickly',
      'no',
      'recently',
      'before',
      'usually',
      'thus',
      'exactly',
      'hard',
      'particularly',
      'pretty',
      'forward',
      'ok',
      'clearly',
      'indeed',
      'rather',
      'that',
      'tonight',
      'close',
      'suddenly',
      'best',
      'instead',
      'ahead',
      'fast',
      'alone',
      'eventually',
      'directly'
    ]],
    [WordTypes.Pronoun,
    [
      'it',
      'I',
      'you',
      'he',
      'they',
      'we',
      'she',
      'who',
      'them',
      'me',
      'him',
      'one',
      'her',
      'us',
      'something',
      'nothing',
      'anything',
      'himself',
      'everything',
      'someone',
      'themselves',
      'everyone',
      'itself',
      'anyone',
      'myself'
    ]],
    [WordTypes.Preposition,
    [
      'aboard',
      'about',
      'above',
      'across',
      'after',
      'against',
      'along',
      'amid',
      'among',
      'anti',
      'around',
      'as',
      'at',
      'before',
      'behind',
      'below',
      'beneath',
      'beside',
      'besides',
      'between',
      'beyond',
      'but',
      'by',
      'concerning',
      'considering',
      'despite',
      'down',
      'during',
      'except',
      'excepting',
      'excluding',
      'following',
      'for',
      'from',
      'in',
      'inside',
      'into',
      'like',
      'minus',
      'near',
      'of',
      'off',
      'on',
      'onto',
      'opposite',
      'outside',
      'over',
      'past',
      'per',
      'plus',
      'regarding',
      'round',
      'save',
      'since',
      'than',
      'through',
      'to',
      'toward',
      'towards',
      'under',
      'underneath',
      'unlike',
      'until',
      'up',
      'upon',
      'versus',
      'via',
      'with',
      'within',
      'without'
    ]]
  ]);

  constructor() { }

  getWord(type: WordTypes): IWord {
    // Get the right wordlist
    const words: string[] = this.words.get(type);

    // Now grab a random one from the list
    const numWords = words.length;
    const wordPosition = Math.floor(Math.random() * numWords);

    // Return it as an IWord.
    return { part: type, label: words[wordPosition] };
  }
}